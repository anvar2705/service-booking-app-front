/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './1-app/routes/__root'
import { Route as IndexImport } from './1-app/routes/index'
import { Route as SettingsIndexImport } from './1-app/routes/settings/index'
import { Route as EmployeesIndexImport } from './1-app/routes/employees/index'
import { Route as SettingsSettingsTabImport } from './1-app/routes/settings/$settingsTab'
import { Route as EmployeesAddImport } from './1-app/routes/employees/add'
import { Route as AuthSignUpImport } from './1-app/routes/auth/sign-up'
import { Route as AuthSignInImport } from './1-app/routes/auth/sign-in'
import { Route as EmployeesEditEmployeeIdImport } from './1-app/routes/employees/edit.$employeeId'
import { Route as EmployeesEditEmployeeIdServicesIndexImport } from './1-app/routes/employees/edit_.$employeeId.services/index'
import { Route as EmployeesEditEmployeeIdServicesAddImport } from './1-app/routes/employees/edit_.$employeeId.services/add'
import { Route as EmployeesEditEmployeeIdServicesEditServiceIdImport } from './1-app/routes/employees/edit_.$employeeId.services/edit.$serviceId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any)

const EmployeesIndexRoute = EmployeesIndexImport.update({
  id: '/employees/',
  path: '/employees/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsSettingsTabRoute = SettingsSettingsTabImport.update({
  id: '/settings/$settingsTab',
  path: '/settings/$settingsTab',
  getParentRoute: () => rootRoute,
} as any)

const EmployeesAddRoute = EmployeesAddImport.update({
  id: '/employees/add',
  path: '/employees/add',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const EmployeesEditEmployeeIdRoute = EmployeesEditEmployeeIdImport.update({
  id: '/employees/edit/$employeeId',
  path: '/employees/edit/$employeeId',
  getParentRoute: () => rootRoute,
} as any)

const EmployeesEditEmployeeIdServicesIndexRoute =
  EmployeesEditEmployeeIdServicesIndexImport.update({
    id: '/employees/edit_/$employeeId/services/',
    path: '/employees/edit/$employeeId/services/',
    getParentRoute: () => rootRoute,
  } as any)

const EmployeesEditEmployeeIdServicesAddRoute =
  EmployeesEditEmployeeIdServicesAddImport.update({
    id: '/employees/edit_/$employeeId/services/add',
    path: '/employees/edit/$employeeId/services/add',
    getParentRoute: () => rootRoute,
  } as any)

const EmployeesEditEmployeeIdServicesEditServiceIdRoute =
  EmployeesEditEmployeeIdServicesEditServiceIdImport.update({
    id: '/employees/edit_/$employeeId/services/edit/$serviceId',
    path: '/employees/edit/$employeeId/services/edit/$serviceId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/employees/add': {
      id: '/employees/add'
      path: '/employees/add'
      fullPath: '/employees/add'
      preLoaderRoute: typeof EmployeesAddImport
      parentRoute: typeof rootRoute
    }
    '/settings/$settingsTab': {
      id: '/settings/$settingsTab'
      path: '/settings/$settingsTab'
      fullPath: '/settings/$settingsTab'
      preLoaderRoute: typeof SettingsSettingsTabImport
      parentRoute: typeof rootRoute
    }
    '/employees/': {
      id: '/employees/'
      path: '/employees'
      fullPath: '/employees'
      preLoaderRoute: typeof EmployeesIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/employees/edit/$employeeId': {
      id: '/employees/edit/$employeeId'
      path: '/employees/edit/$employeeId'
      fullPath: '/employees/edit/$employeeId'
      preLoaderRoute: typeof EmployeesEditEmployeeIdImport
      parentRoute: typeof rootRoute
    }
    '/employees/edit_/$employeeId/services/add': {
      id: '/employees/edit_/$employeeId/services/add'
      path: '/employees/edit/$employeeId/services/add'
      fullPath: '/employees/edit/$employeeId/services/add'
      preLoaderRoute: typeof EmployeesEditEmployeeIdServicesAddImport
      parentRoute: typeof rootRoute
    }
    '/employees/edit_/$employeeId/services/': {
      id: '/employees/edit_/$employeeId/services/'
      path: '/employees/edit/$employeeId/services'
      fullPath: '/employees/edit/$employeeId/services'
      preLoaderRoute: typeof EmployeesEditEmployeeIdServicesIndexImport
      parentRoute: typeof rootRoute
    }
    '/employees/edit_/$employeeId/services/edit/$serviceId': {
      id: '/employees/edit_/$employeeId/services/edit/$serviceId'
      path: '/employees/edit/$employeeId/services/edit/$serviceId'
      fullPath: '/employees/edit/$employeeId/services/edit/$serviceId'
      preLoaderRoute: typeof EmployeesEditEmployeeIdServicesEditServiceIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/employees/add': typeof EmployeesAddRoute
  '/settings/$settingsTab': typeof SettingsSettingsTabRoute
  '/employees': typeof EmployeesIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/employees/edit/$employeeId': typeof EmployeesEditEmployeeIdRoute
  '/employees/edit/$employeeId/services/add': typeof EmployeesEditEmployeeIdServicesAddRoute
  '/employees/edit/$employeeId/services': typeof EmployeesEditEmployeeIdServicesIndexRoute
  '/employees/edit/$employeeId/services/edit/$serviceId': typeof EmployeesEditEmployeeIdServicesEditServiceIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/employees/add': typeof EmployeesAddRoute
  '/settings/$settingsTab': typeof SettingsSettingsTabRoute
  '/employees': typeof EmployeesIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/employees/edit/$employeeId': typeof EmployeesEditEmployeeIdRoute
  '/employees/edit/$employeeId/services/add': typeof EmployeesEditEmployeeIdServicesAddRoute
  '/employees/edit/$employeeId/services': typeof EmployeesEditEmployeeIdServicesIndexRoute
  '/employees/edit/$employeeId/services/edit/$serviceId': typeof EmployeesEditEmployeeIdServicesEditServiceIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/employees/add': typeof EmployeesAddRoute
  '/settings/$settingsTab': typeof SettingsSettingsTabRoute
  '/employees/': typeof EmployeesIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/employees/edit/$employeeId': typeof EmployeesEditEmployeeIdRoute
  '/employees/edit_/$employeeId/services/add': typeof EmployeesEditEmployeeIdServicesAddRoute
  '/employees/edit_/$employeeId/services/': typeof EmployeesEditEmployeeIdServicesIndexRoute
  '/employees/edit_/$employeeId/services/edit/$serviceId': typeof EmployeesEditEmployeeIdServicesEditServiceIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/employees/add'
    | '/settings/$settingsTab'
    | '/employees'
    | '/settings'
    | '/employees/edit/$employeeId'
    | '/employees/edit/$employeeId/services/add'
    | '/employees/edit/$employeeId/services'
    | '/employees/edit/$employeeId/services/edit/$serviceId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/employees/add'
    | '/settings/$settingsTab'
    | '/employees'
    | '/settings'
    | '/employees/edit/$employeeId'
    | '/employees/edit/$employeeId/services/add'
    | '/employees/edit/$employeeId/services'
    | '/employees/edit/$employeeId/services/edit/$serviceId'
  id:
    | '__root__'
    | '/'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/employees/add'
    | '/settings/$settingsTab'
    | '/employees/'
    | '/settings/'
    | '/employees/edit/$employeeId'
    | '/employees/edit_/$employeeId/services/add'
    | '/employees/edit_/$employeeId/services/'
    | '/employees/edit_/$employeeId/services/edit/$serviceId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  EmployeesAddRoute: typeof EmployeesAddRoute
  SettingsSettingsTabRoute: typeof SettingsSettingsTabRoute
  EmployeesIndexRoute: typeof EmployeesIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
  EmployeesEditEmployeeIdRoute: typeof EmployeesEditEmployeeIdRoute
  EmployeesEditEmployeeIdServicesAddRoute: typeof EmployeesEditEmployeeIdServicesAddRoute
  EmployeesEditEmployeeIdServicesIndexRoute: typeof EmployeesEditEmployeeIdServicesIndexRoute
  EmployeesEditEmployeeIdServicesEditServiceIdRoute: typeof EmployeesEditEmployeeIdServicesEditServiceIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  EmployeesAddRoute: EmployeesAddRoute,
  SettingsSettingsTabRoute: SettingsSettingsTabRoute,
  EmployeesIndexRoute: EmployeesIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
  EmployeesEditEmployeeIdRoute: EmployeesEditEmployeeIdRoute,
  EmployeesEditEmployeeIdServicesAddRoute:
    EmployeesEditEmployeeIdServicesAddRoute,
  EmployeesEditEmployeeIdServicesIndexRoute:
    EmployeesEditEmployeeIdServicesIndexRoute,
  EmployeesEditEmployeeIdServicesEditServiceIdRoute:
    EmployeesEditEmployeeIdServicesEditServiceIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/sign-in",
        "/auth/sign-up",
        "/employees/add",
        "/settings/$settingsTab",
        "/employees/",
        "/settings/",
        "/employees/edit/$employeeId",
        "/employees/edit_/$employeeId/services/add",
        "/employees/edit_/$employeeId/services/",
        "/employees/edit_/$employeeId/services/edit/$serviceId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx"
    },
    "/auth/sign-up": {
      "filePath": "auth/sign-up.tsx"
    },
    "/employees/add": {
      "filePath": "employees/add.tsx"
    },
    "/settings/$settingsTab": {
      "filePath": "settings/$settingsTab.tsx"
    },
    "/employees/": {
      "filePath": "employees/index.tsx"
    },
    "/settings/": {
      "filePath": "settings/index.tsx"
    },
    "/employees/edit/$employeeId": {
      "filePath": "employees/edit.$employeeId.tsx"
    },
    "/employees/edit_/$employeeId/services/add": {
      "filePath": "employees/edit_.$employeeId.services/add.tsx"
    },
    "/employees/edit_/$employeeId/services/": {
      "filePath": "employees/edit_.$employeeId.services/index.tsx"
    },
    "/employees/edit_/$employeeId/services/edit/$serviceId": {
      "filePath": "employees/edit_.$employeeId.services/edit.$serviceId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
